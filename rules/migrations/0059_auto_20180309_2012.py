# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-03-09 20:12
from __future__ import unicode_literals

import re

from django.db import migrations, models

def parse_flowbits(self, source, flowbits, Flowbit):
    BITSREGEXP = {'flowbits': re.compile("flowbits *: *(isset|set),(.*?) *;"),
                  'hostbits': re.compile("hostbits *: *(isset|set),(.*?) *;"),
                  'xbits': re.compile("xbits *: *(isset|set),(.*?) *;"),
                 }
    for ftype in BITSREGEXP:
        match = BITSREGEXP[ftype].findall(self.content)
        if match:
            for flowinst in match:
                # create Flowbit if needed
                if not flowinst[1] in list(flowbits[ftype].keys()):
                    elt = Flowbit(type = ftype, name = flowinst[1],
                                  source = source)
                    flowbits[ftype][flowinst[1]] = elt
                    elt.save()
                else:
                    elt = flowbits[ftype][flowinst[1]]

                if flowinst[0] == "isset":
                    if not self.checker.filter(set=self):
                        elt.isset.add(self)
                        elt.save()
                else:
                    if not self.setter.filter(set=self):
                        elt.set.add(self)
                        elt.save()

def init_flowbits(apps, schema_editor):
    Flowbit = apps.get_model('rules', 'Flowbit')
    Rule = apps.get_model('rules', 'Rule')
    # delete existing Flowbits
    Flowbit.objects.all().delete()
    # parse all flowbits
    flowbits = { }
    for key in ('flowbits', 'hostbits', 'xbits'):
        flowbits[key] = {}
    for rule in Rule.objects.all():
        parse_flowbits(rule, rule.category.source, flowbits, Flowbit)
        

class Migration(migrations.Migration):

    dependencies = [
        ('rules', '0058_source_public_source'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='rule',
            name='flowbits',
        ),
        migrations.RemoveField(
            model_name='flowbit',
            name='isset',
        ),
        migrations.AddField(
            model_name='flowbit',
            name='isset',
            field=models.ManyToManyField(related_name='checker', to='rules.Rule'),
        ),
        migrations.RemoveField(
            model_name='flowbit',
            name='set',
        ),
        migrations.AddField(
            model_name='flowbit',
            name='set',
            field=models.ManyToManyField(related_name='setter', to='rules.Rule'),
        ),
        migrations.RunPython(init_flowbits),
    ]
