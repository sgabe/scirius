# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-02-23 08:23


from django.db import migrations, models
import django.db.models.deletion
from rules.models import Transformation


def migrate_transformations_data(apps, schema_editor):
    # Models
    Ruleset = apps.get_model('rules', 'Ruleset')
    CategoryTransformation = apps.get_model('rules', 'CategoryTransformation')
    RuleTransformation = apps.get_model('rules', 'RuleTransformation')

    # Keys
    ACTION = Transformation.ACTION
    SUPPRESSED = Transformation.SUPPRESSED

    # Values
    A_DROP = Transformation.A_DROP
    A_REJECT = Transformation.A_REJECT
    A_FILESTORE = Transformation.A_FILESTORE
    A_NONE = Transformation.A_NONE
    S_SUPPRESSED = Transformation.S_SUPPRESSED

    for ruleset in Ruleset.objects.all():
        # Drop categories
        for drop_cat in ruleset.drop_categories.all():
            ct = CategoryTransformation(
                    ruleset=ruleset,
                    category_transformation=drop_cat,
                    key=ACTION.value,
                    value=A_DROP.value)
            ct.save()

        # Reject categories
        for reject_cat in ruleset.reject_categories.all():
            ct = CategoryTransformation(
                    ruleset=ruleset,
                    category_transformation=drop_cat,
                    key=ACTION.value,
                    value=A_REJECT.value)
            ct.save()

        # Filestore categories
        for filestore_cat in ruleset.filestore_categories.all():
            ct = CategoryTransformation(
                    ruleset=ruleset,
                    category_transformation=drop_cat,
                    key=ACTION.value,
                    value=A_FILESTORE.value)
            ct.save()

        # Suppressed rules
        for suppressed_rule in ruleset.suppressed_rules.all():
            rt = RuleTransformation(
                    ruleset=ruleset,
                    rule_transformation=suppressed_rule,
                    key=SUPPRESSED.value,
                    value=S_SUPPRESSED.value)
            rt.save()

        # Drop rules
        for drop_rule in ruleset.drop_rules.all():
            rt = RuleTransformation(
                    ruleset=ruleset,
                    rule_transformation=drop_rule,
                    key=ACTION.value,
                    value=A_DROP.value)
            rt.save()

        # Filestore rules
        for filestore_rule in ruleset.filestore_rules.all():
            rt = RuleTransformation(
                    ruleset=ruleset,
                    rule_transformation=filestore_rule,
                    key=ACTION.value,
                    value=A_FILESTORE.value)
            rt.save()

        # Reject rules
        for reject_rule in ruleset.reject_rules.all():
            rt = RuleTransformation(
                    ruleset=ruleset,
                    rule_transformation=reject_rule,
                    key=ACTION.value,
                    value=A_REJECT.value)
            rt.save()

        # None rules
        for none_rule in ruleset.none_rules.all():
            rt = RuleTransformation(
                    ruleset=ruleset,
                    rule_transformation=none_rule,
                    key=ACTION.value,
                    value=A_NONE.value)
            rt.save()


class Migration(migrations.Migration):

    dependencies = [
        ('rules', '0055_auto_20180213_1723'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryTransformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[(b'action', b'Action'), (b'lateral', b'Lateral'), (b'none', b'None'), (b'suppressed', b'Suppressed'), (b'target', b'Target')], default=b'action', max_length=15)),
                ('value', models.CharField(default=b'none', max_length=15)),
                ('category_transformation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.Category')),
            ],
        ),
        migrations.CreateModel(
            name='RuleTransformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[(b'action', b'Action'), (b'lateral', b'Lateral'), (b'none', b'None'), (b'suppressed', b'Suppressed'), (b'target', b'Target')], default=b'action', max_length=15)),
                ('value', models.CharField(default=b'none', max_length=15)),
                ('rule_transformation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.Rule')),
            ],
        ),
        migrations.AddField(
            model_name='ruletransformation',
            name='ruleset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.Ruleset'),
        ),
        migrations.AddField(
            model_name='categorytransformation',
            name='ruleset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rules.Ruleset'),
        ),
        migrations.AddField(
            model_name='ruleset',
            name='categories_transformation',
            field=models.ManyToManyField(blank=True, related_name='categories_transformed', through='rules.CategoryTransformation', to='rules.Category'),
        ),
        migrations.AddField(
            model_name='ruleset',
            name='rules_transformation',
            field=models.ManyToManyField(blank=True, related_name='rules_transformed', through='rules.RuleTransformation', to='rules.Rule'),
        ),
        migrations.AlterUniqueTogether(
            name='ruletransformation',
            unique_together=set([('ruleset', 'rule_transformation', 'key')]),
        ),
        migrations.AlterUniqueTogether(
            name='categorytransformation',
            unique_together=set([('ruleset', 'category_transformation', 'key')]),
        ),

        # Migration here
        migrations.RunPython(migrate_transformations_data),

        migrations.RemoveField(
            model_name='ruleset',
            name='drop_categories',
        ),
        migrations.RemoveField(
            model_name='ruleset',
            name='drop_rules',
        ),
        migrations.RemoveField(
            model_name='ruleset',
            name='filestore_categories',
        ),
        migrations.RemoveField(
            model_name='ruleset',
            name='filestore_rules',
        ),
        migrations.RemoveField(
            model_name='ruleset',
            name='none_rules',
        ),
        migrations.RemoveField(
            model_name='ruleset',
            name='reject_categories',
        ),
        migrations.RemoveField(
            model_name='ruleset',
            name='reject_rules',
        ),
        migrations.RemoveField(
            model_name='ruleset',
            name='suppressed_rules',
        ),
    ]
