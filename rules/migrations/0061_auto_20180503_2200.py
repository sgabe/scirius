# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-05-03 22:00


from django.db import migrations, models
from idstools import rule as rule_idstools
from datetime import date as datetime_date

def parse_metadata_time(sfield):
    sdate = sfield.split(' ')[1]
    if sdate:
        de = sdate.split('_')
        try:
            return datetime_date(int(de[0]),int(de[1]),int(de[2]))
        except ValueError:
            # Catches conversion to int failure, in case the date is 'unknown'
            pass
    return None

def migrate_parse_metadata(apps, schema_editor):
    Rule = apps.get_model('rules', 'Rule')
    for rule in Rule.objects.all():
        rule_ids = rule_idstools.parse(rule.content)
        if rule_ids is None:
            continue
        for meta in rule_ids.metadata:
            if meta.startswith('created_at '):
                rule.created = parse_metadata_time(meta)
            if meta.startswith('updated_at '):
                rule.updated = parse_metadata_time(meta)
        rule.save()


class Migration(migrations.Migration):
    dependencies = [
        ('rules', '0060_auto_20180403_0921'),
    ]

    operations = [
        migrations.AddField(
            model_name='rule',
            name='created',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='rule',
            name='updated',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.RunPython(migrate_parse_metadata),
    ]
